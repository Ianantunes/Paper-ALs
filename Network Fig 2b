#Instalando Pacotes
install.packages("GGally")
install.packages("intergraph")
install.packages("RColorBrewer")
install.packages("network")
install.packages("sna")
install.packages("ggplot2")
devtools::install_github("briatte/ggnet")
#Carregando Pacotes
library(GGally)
library(ggnet)
library(network)
library(sna)
library(ggplot2)
library(RColorBrewer)
library(intergraph)

library(readxl)

library(tidyr)
library(dplyr)

library(igraph)

data <- read.csv(file.choose())

data$Term <- sub("\\s*\\([^\\)]+\\)", "", data$Term)
data <- data %>%
  separate_rows(Genes, sep = ";")

dfnet <- data[c(1,3,7,8,9,10)]
head(dfnet)

dfnet_total <- dfnet %>% distinct(Term, Genes, .keep_all = TRUE)
net <- network(dfnet_total[, c("Term", "Genes")])

plot(net)

#print(colnames(dfnet_total))
dfnet_total <- dfnet_total %>% filter(Gene.group == "T genes" | Gene.group == "B genes" | Gene.group == "M genes" | Gene.group == "C genes")
#unique(dfnet_total$Gene.group)

#reduction_percent = 0.2
#reductions <- table(dfnet_total$Gene.group) * reduction_percent
#dfnet_reduced <- data.frame(
#  Gene.group = rep(names(reductions), reductions)
#)
#table(dfnet_reduced$Gene.group)

u <- data.frame(Term = network.vertex.names(net))
str(u)
u <- merge(u, dfnet_total, by = "Term", sort = FALSE)$Gene.group
str(u)

net %v% "Groups" <- as.character(u) #Grupo de condicoes
table(net %v% "Groups")




##########
#dfnet_unique <- unique(dfnet_total[, c("Genes", "Gene.group")])
#table(dfnet_total$Gene.group)

#net %v% "Groups" <- dfnet_total$Gene.group ### ggNet para vizualizacao de pathways ###
#table(net %v% "Groups")
net %v% "P.value" <- dfnet_total$P.value #Pvalor
net %v% "Genes" <- dfnet_total$Genes #Pvalor
net %v% "Term" <- dfnet_total$Term #Pvalor

library(scales)
ggnet2(net, 
       size.cut = 60, 
       # size.min = 1.1,
       # size.max = 10,
       size = "degree",
       shape = "Groups",
       #alpha = 0.7,
       color = "Groups",
       size.legend.title = "Degree",  
       size.legend.position = "bottom",
       shape.mapping = aes(shape = degree),  # Use degree para shape diretamente
       shape.palette = c("T genes" = 17,
                         "B genes" = 16,
                         "M genes" = 18,
                         "C genes" = 15),
       shape.legend = TRUE,
       palette = c("T genes" = "#313695",
                   "B genes" = "#74ADD1",
                   "M genes" = "#F46D43",
                   "C genes" = "#A50026"),
       legend.size = 18)
#edge.color = c("color", "grey50")) 
# scale_shape_manual(values = c("T genes" = 17,
#                            "B genes" = 16,
#                            "M genes" = 18,
#                            "C genes" = 15))
# guides(shape = guide_legend(title = "Groups", keyheight = 1, keywidth = 5)) 
